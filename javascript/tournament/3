//
// This is only a SKELETON file for the 'Tournament' exercise. It's been provided as a
// convenience to get you started writing code faster.
//


function addTeam(teams, teamName){
    teams[teamName] = {MP: 0, W: 0, D: 0, L: 0, P: 0}
}


function processMatch(teams, team1, team2, result){

  if (!(team1 in teams)){
    addTeam(teams, team1)
  }

  if (!(team2 in teams)){
    addTeam(teams, team2)
  }

  switch (result){
    case "win":
      teams[team1].MP += 1
      teams[team1].W += 1
      teams[team1].P += 3
      teams[team2].L += 1
      teams[team2].MP += 1
      break;

    case "loss":
      teams[team1].MP += 1
      teams[team1].L += 1
      teams[team2].W += 1
      teams[team2].MP += 1
      teams[team2].P += 3
      break;

    case "draw":
      teams[team1].MP += 1
      teams[team1].D += 1
      teams[team1].P += 1
      teams[team2].MP += 1
      teams[team2].D += 1
      teams[team2].P += 1
      break;
  }

  return teams
}


function getSpaceCount(header){
  for (let i=0; i < header.length; i ++) {
    if (header[i] === "|") {
      return i
    }
  }
}

function formatTeamSummary(name, record, spaceCount){
  let formattedName = name.padEnd(spaceCount)

  let points = record.P.
  points = points.padStart(3)
  return formattedName + `|  ${record.MP} |  ${record.W} |  ${record.D} |  ${record.L} |  ${points}\n`

}


function printResults(teams){
  let header = "Team                           | MP |  W |  D |  L |  P\n"
  let results = []
  const space = getSpaceCount(header) 

  let sortable = []
  for (let name in teams){
    sortable.push([name, teams[name].P])
  }
  
  // Sort Alphabetically
  sortable.sort(function(a, b) {
    if(a[0] > b[0]){
      return 1
    }
    return -1
  });

  // Sort By Score
  sortable.sort(function(a, b) {
    return b[1]- a[1];
  });


  for (let i=0; i < sortable.length; i++){
    results.push(formatTeamSummary(sortable[i][0], teams[sortable[i][0]], space))
  }

  return header + results.join("")
}


export const tournamentTally = (input) => {
  const lines = input.split('\n');
  let teams = {}
  if (input != ""){
    for (let i=0; i < lines.length; i++){
      let [team1, team2, result] = lines[i].split(";");
      teams = processMatch(teams, team1, team2, result)
    }
  }
  
  return printResults(teams).trim()
};
